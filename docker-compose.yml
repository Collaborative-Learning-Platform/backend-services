services:
  # API Gateway - Entry point for all requests
  gateway:
    build:
      context: .
      dockerfile: docker/gateway.Dockerfile
    ports:
      - '3000:3000'
    env_file:
      - ./env/.common.env
      - ./env/.gateway.env
    depends_on:
      - user-ms
      - auth-ms
      - notification-ms
      - workspace-ms
      - chat-ms
      - quiz-ms
      - document-ms
      - storage-ms
      - ai-ms
      - whiteboard-ms
      - analytics-ms
    restart: unless-stopped

  # Authentication Service
  auth-ms:
    build:
      context: .
      dockerfile: docker/auth-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.auth-ms.env
    expose:
      - '4000'
    restart: unless-stopped

  # User Management Service
  user-ms:
    build:
      context: .
      dockerfile: docker/user-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.user-ms.env
    expose:
      - '4001'
    restart: unless-stopped

  # Notification Service
  notification-ms:
    build:
      context: .
      dockerfile: docker/notification-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.notification-ms.env
    expose:
      - '4002'
    restart: unless-stopped

  # Workspace Management Service
  workspace-ms:
    build:
      context: .
      dockerfile: docker/workspace-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.workspace-ms.env
    expose:
      - '4003'
    restart: unless-stopped

  # Quiz Service
  quiz-ms:
    build:
      context: .
      dockerfile: docker/quiz-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.quiz-ms.env
    expose:
      - '4004'
    restart: unless-stopped

  # Chat Service
  chat-ms:
    build:
      context: .
      dockerfile: docker/chat-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.chat-ms.env
    expose:
      - '4005'
    restart: unless-stopped

  # Document Management Service (with Hocuspocus)
  document-ms:
    build:
      context: .
      dockerfile: docker/document-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.document-ms.env
    expose:
      - '4006'
      - '1234'  # Hocuspocus server port
    restart: unless-stopped

  # File Storage Service
  storage-ms:
    build:
      context: .
      dockerfile: docker/storage-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.storage-ms.env
    expose:
      - '4007'
    restart: unless-stopped

  # AI Service
  ai-ms:
    build:
      context: .
      dockerfile: docker/ai-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.ai-ms.env
    expose:
      - '4008'
    restart: unless-stopped

  # Whiteboard Service
  whiteboard-ms:
    build:
      context: .
      dockerfile: docker/whiteboard-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.whiteboard-ms.env
    ports:
      - '8080:8080'  # Expose WebSocket port for external access  
    expose:
      - '4009'  # TCP port
      
    restart: unless-stopped

  # Analytics Service
  analytics-ms:
    build:
      context: .
      dockerfile: docker/analytics-ms.Dockerfile
    env_file:
      - ./env/.common.env
      - ./env/.analytics-ms.env
    expose:
      - '4010'  # Port for analytics service
    restart: unless-stopped