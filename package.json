{
  "name": "backend-services",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "hocuspocus": "ts-node apps/document-ms/hocuspocus.server.ts",
    "build:gateway": "nest build gateway",
    "build:user-ms": "nest build user-ms",
    "build:auth-ms": "nest build auth-ms",
    "build:notification-ms": "nest build notification-ms",
    "build:workspace-ms": "nest build workspace-ms",
    "build:chat-ms": "nest build chat-ms",
    "build:quiz-ms": "nest build quiz-ms",
    "build:whiteboard-ms": "nest build whiteboard-ms",
    "build:ai-ms": "nest build ai-ms",
    "build:analytics-ms": "nest build analytics-ms",
    "build:document-ms": "nest build document-ms",
    "build:storage-ms": "nest build storage-ms",
    "build:all": "npm run build:gateway && npm run build:user-ms && npm run build:auth-ms && npm run build:notification-ms && npm run build:workspace-ms && npm run build:chat-ms && npm run build:quiz-ms && npm run build:whiteboard-ms && npm run build:ai-ms && npm run build:analytics-ms && npm run build:document-ms && npm run build:storage-ms",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:gateway": "nest start gateway",
    "start:user-ms": "nest start user-ms",
    "start:auth-ms": "nest start auth-ms",
    "start:notification-ms": "nest start notification-ms",
    "start:workspace-ms": "nest start workspace-ms",
    "start:chat-ms": "nest start chat-ms",
    "start:quiz-ms": "nest start quiz-ms",
    "start:whiteboard-ms": "nest start whiteboard-ms",
    "start:ai-ms": "nest start ai-ms",
    "start:analytics-ms": "nest start analytics-ms",
    "start:document-ms": "nest start document-ms",
    "start:storage-ms": "nest start storage-ms",
    "start:dev": "nest start --watch",
    "start:dev:gateway": "nest start gateway --watch",
    "start:dev:user-ms": "nest start user-ms --watch",
    "start:dev:auth-ms": "nest start auth-ms --watch",
    "start:dev:notification-ms": "nest start notification-ms --watch",
    "start:dev:workspace-ms": "nest start workspace-ms --watch",
    "start:dev:chat-ms": "nest start chat-ms --watch",
    "start:dev:quiz-ms": "nest start quiz-ms --watch",
    "start:dev:whiteboard-ms": "nest start whiteboard-ms --watch",
    "start:dev:ai-ms": "nest start ai-ms --watch",
    "start:dev:analytics-ms": "nest start analytics-ms --watch",
    "start:dev:document-ms": "nest start document-ms --watch",
    "start:dev:storage-ms": "nest start storage-ms --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/backend-services/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:gateway": "jest --config ./apps/gateway/test/jest-e2e.json",
    "test:user-ms": "jest --config ./apps/user-ms/test/jest-e2e.json",
    "test:auth-ms": "jest --config ./apps/auth-ms/test/jest-e2e.json",
    "test:notification-ms": "jest --config ./apps/notification-ms/test/jest-e2e.json",
    "test:workspace-ms": "jest --config ./apps/workspace-ms/test/jest-e2e.json",
    "test:chat-ms": "jest --config ./apps/chat-ms/test/jest-e2e.json",
    "test:quiz-ms": "jest --config ./apps/quiz-ms/test/jest-e2e.json",
    "test:whiteboard-ms": "jest --config ./apps/whiteboard-ms/test/jest-e2e.json",
    "test:ai-ms": "jest --config ./apps/ai-ms/test/jest-e2e.json",
    "test:analytics-ms": "jest --config ./apps/analytics-ms/test/jest-e2e.json",
    "test:document-ms": "jest --config ./apps/document-ms/test/jest-e2e.json",
    "test:storage-ms": "jest --config ./apps/storage-ms/test/jest-e2e.json",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/backend-services/test/jest-e2e.json",
    "docker:build": "docker-compose build",
    "docker:build:nocache": "docker-compose build --no-cache",
    "docker:up": "docker-compose up -d",
    "docker:up:build": "docker-compose up -d --build",
    "docker:down": "docker-compose down",
    "docker:down:volumes": "docker-compose down -v",
    "docker:logs": "docker-compose logs -f",
    "docker:ps": "docker-compose ps",
    "docker:restart": "docker-compose restart",
    "docker:clean": "docker system prune -f && docker-compose down -v --rmi all",
    "load-test:auth": "cd load-tests && artillery run auth-load-test.yml",
    "load-test:workspace": "cd load-tests && artillery run workspace-load-test.yml",
    "load-test:ai": "cd load-tests && artillery run ai-load-test.yml",
    "load-test:communication": "cd load-tests && artillery run communication-load-test.yml",
    "load-test:interactive": "cd load-tests && artillery run interactive-load-test.yml",
    "load-test:storage": "cd load-tests && artillery run storage-load-test.yml",
    "load-test:comprehensive": "cd load-tests && artillery run comprehensive-load-test.yml",
    "load-test:all": "npm run load-test:auth && npm run load-test:workspace && npm run load-test:ai && npm run load-test:communication && npm run load-test:interactive && npm run load-test:storage",
    "load-test:quick": "cd load-tests && artillery quick --count 10 --num 50 https://learniinstitute.live",
    "load-test:spike": "cd load-tests && artillery run comprehensive-load-test.yml --overrides \"{\\\"config\\\": {\\\"phases\\\": [{\\\"duration\\\": 30, \\\"arrivalRate\\\": 200}]}}\"",
    "load-test:setup": "powershell -ExecutionPolicy Bypass -File load-tests/run-load-tests.ps1"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.899.0",
    "@aws-sdk/s3-request-presigner": "^3.901.0",
    "@gip-recia/tldraw-v1": "^1.29.2-recia-1.0.0",
    "@google/generative-ai": "^0.24.1",
    "@hocuspocus/extension-database": "^3.2.3",
    "@hocuspocus/extension-redis": "^3.2.3",
    "@hocuspocus/server": "^3.2.3",
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/common": "^11.0.1",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/microservices": "^11.1.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/platform-socket.io": "^11.1.6",
    "@nestjs/schedule": "^6.0.1",
    "@nestjs/typeorm": "^11.0.0",
    "@nestjs/websockets": "^11.1.6",
    "@tldraw/store": "^4.0.3",
    "@tldraw/sync-core": "^4.0.3",
    "@tldraw/tlschema": "^4.0.3",
    "aws-sdk": "^2.1692.0",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cookie-parser": "^1.4.7",
    "csv-parser": "^3.2.0",
    "date-fns": "^4.1.0",
    "dotenv": "^17.2.2",
    "jsesc": "^3.1.0",
    "multer": "^2.0.2",
    "nodemailer": "^7.0.6",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "socket.io": "^4.8.1",
    "typeorm": "^0.3.25",
    "uuid": "^8.3.2",
    "ws": "^8.18.3",
    "xlsx": "^0.18.5",
    "y-websocket": "^3.0.0",
    "yjs": "^13.6.27"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@ljharb/tsconfig": "^0.3.2",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcrypt": "^6.0.0",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/multer": "^2.0.0",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/"
    ]
  }
}
